Error ----------------------------------------------------------------------------------------------------- test.js:31:1

Cannot create `ClassExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in
props [2].

   test.js:31:1
   31| <ClassExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   test.js:29:57
   29| class ClassExact_NoProps extends React.Component<$Exact<Props_NoProps>> {}
                                                               ^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:43:1

Cannot create `FunctionExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in
props [2].

   test.js:43:1
   43| <FunctionExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   test.js:41:46
   41| const FunctionExact_NoProps = (props: $Exact<Props_NoProps>) => any;
                                                    ^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:51:1

Cannot create `AbstractExact_NoProps` element because property `foo` is missing in `Props_NoProps` [1] but exists in
props [2].

   test.js:51:1
   51| <AbstractExact_NoProps foo={42} />; // Error: Exact type does not have `foo`.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]

References:
   test.js:49:57
   49| const AbstractExact_NoProps: React.ComponentType<$Exact<Props_NoProps>> = any;
                                                               ^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:86:1

Cannot create `Legacy_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in propTypes of React component [2].
 - property `boolean2` is missing in props [1] but exists in propTypes of React component [2].
 - property `number` is missing in props [1] but exists in propTypes of React component [2].
 - property `string1` is missing in props [1] but exists in propTypes of React component [2].
 - property `string2` is missing in props [1] but exists in propTypes of React component [2].

   test.js:86:1
   86| <Legacy_ManyProps />; // Error: There are no props.
       ^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:78:14
                    v
   78|   propTypes: {
   79|     string1: React.PropTypes.string.isRequired,
   80|     string2: React.PropTypes.string.isRequired,
   81|     boolean1: React.PropTypes.bool.isRequired,
   82|     boolean2: React.PropTypes.bool.isRequired,
   83|     number: React.PropTypes.number.isRequired,
   84|   },
         ^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:104:1

Cannot create `Legacy_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [2] in property `string2`.
 - null [4] is incompatible with boolean [5] in property `boolean1`.
 - null [6] is incompatible with boolean [5] in property `boolean2`.
 - null [7] is incompatible with number [8] in property `number`.

   test.js:104:1
        v------------------------------------------------------------
   104| <Legacy_ManyProps // Error: All props have an incorrect type.
   105|   string1={null}
   106|   string2={null}
   107|   boolean1={null}
   108|   boolean2={null}
   109|   number={null}
   110| />;
        -^

References:
   test.js:105:12
   105|   string1={null}
                   ^^^^ [1]
   <BUILTINS>/react.js:315:36
   315|   string: React$PropType$Primitive<string>;
                                           ^^^^^^ [2]
   test.js:106:12
   106|   string2={null}
                   ^^^^ [3]
   test.js:107:13
   107|   boolean1={null}
                    ^^^^ [4]
   <BUILTINS>/react.js:311:34
   311|   bool: React$PropType$Primitive<boolean>;
                                         ^^^^^^^ [5]
   test.js:108:13
   108|   boolean2={null}
                    ^^^^ [6]
   test.js:109:11
   109|   number={null}
                  ^^^^ [7]
   <BUILTINS>/react.js:313:36
   313|   number: React$PropType$Primitive<number>;
                                           ^^^^^^ [8]


Error ---------------------------------------------------------------------------------------------------- test.js:123:1

Cannot create `Legacy_ManyProps` element because property `number` is missing in props [1] but exists in propTypes of
React component [2].

   test.js:123:1
        v--------------------------------------------
   123| <Legacy_ManyProps // Error: Missing `number`.
   124|   {...{string1: 'foo', string2: 'bar'}}
   125|   {...{boolean1: true, boolean2: false}}
   126| />;
        -^ [1]

References:
   test.js:78:14
                     v
    78|   propTypes: {
    79|     string1: React.PropTypes.string.isRequired,
    80|     string2: React.PropTypes.string.isRequired,
    81|     boolean1: React.PropTypes.bool.isRequired,
    82|     boolean2: React.PropTypes.bool.isRequired,
    83|     number: React.PropTypes.number.isRequired,
    84|   },
          ^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:134:1

Cannot create `Legacy_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:134:1
        v------------------------------------------------------------------------------------------------------------
   134| <Legacy_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   135|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   136|   boolean1
   137|   boolean2={false}
   138|   number={42}
   139| />;
        -^

References:
   test.js:135:54
   135|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   <BUILTINS>/react.js:313:36
   313|   number: React$PropType$Primitive<number>;
                                           ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:144:54

null or undefined [1] is incompatible with number [2].

   test.js:144:54
   144|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:143:11
   143|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:148:1

Cannot create `Class_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:148:1
   148| <Class_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:147:47
   147| class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:166:1

Cannot create `Class_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:166:1
        v-----------------------------------------------------------
   166| <Class_ManyProps // Error: All props have an incorrect type.
   167|   string1={null}
   168|   string2={null}
   169|   boolean1={null}
   170|   boolean2={null}
   171|   number={null}
   172| />;
        -^

References:
   test.js:167:12
   167|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:168:12
   168|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:169:13
   169|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:170:13
   170|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:171:11
   171|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:185:1

Cannot create `Class_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:185:1
        v-------------------------------------------
   185| <Class_ManyProps // Error: Missing `number`.
   186|   {...{string1: 'foo', string2: 'bar'}}
   187|   {...{boolean1: true, boolean2: false}}
   188| />;
        -^ [1]

References:
   test.js:147:47
   147| class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:196:1

Cannot create `Class_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:196:1
        v-----------------------------------------------------------------------------------------------------------
   196| <Class_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   197|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   198|   boolean1
   199|   boolean2={false}
   200|   number={42}
   201| />;
        -^

References:
   test.js:197:54
   197|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:206:54

null or undefined [1] is incompatible with number [2].

   test.js:206:54
   206|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:205:11
   205|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:210:1

Cannot create `ClassExact_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:210:1
   210| <ClassExact_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:209:59
   209| class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                  ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:218:1

Cannot create `ClassExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:218:1
        v-----------------------------------------------------------
   218| <ClassExact_ManyProps // Error: Extra props are not allowed.
   219|   string1="foo"
   220|   string2={'bar'}
   221|   boolean1
   222|   boolean2={false}
   223|   number={42}
   224|   a={1}
   225|   b={2}
   226|   c={3}
   227| />;
        -^ [2]

References:
   test.js:209:59
   209| class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                  ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:228:1

Cannot create `ClassExact_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:228:1
        v----------------------------------------------------------------
   228| <ClassExact_ManyProps // Error: All props have an incorrect type.
   229|   string1={null}
   230|   string2={null}
   231|   boolean1={null}
   232|   boolean2={null}
   233|   number={null}
   234| />;
        -^

References:
   test.js:229:12
   229|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:230:12
   230|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:231:13
   231|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:232:13
   232|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:233:11
   233|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:247:1

Cannot create `ClassExact_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:247:1
        v------------------------------------------------
   247| <ClassExact_ManyProps // Error: Missing `number`.
   248|   {...{string1: 'foo', string2: 'bar'}}
   249|   {...{boolean1: true, boolean2: false}}
   250| />;
        -^ [1]

References:
   test.js:209:59
   209| class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                  ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:251:1

Cannot create `ClassExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:251:1
        v-----------------------------------------------------------
   251| <ClassExact_ManyProps // Error: Extra props are not allowed.
   252|   string1="foo"
   253|   string2={'bar'}
   254|   boolean1
   255|   boolean2={false}
   256|   {...{number: 42, a: 1, b: 2, c: 3}}
   257| />;
        -^ [2]

References:
   test.js:209:59
   209| class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                                  ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:258:1

Cannot create `ClassExact_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:258:1
        v----------------------------------------------------------------------------------------------------------------
   258| <ClassExact_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   259|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   260|   boolean1
   261|   boolean2={false}
   262|   number={42}
   263| />;
        -^

References:
   test.js:259:54
   259|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:268:54

null or undefined [1] is incompatible with number [2].

   test.js:268:54
   268|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:267:11
   267|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:273:1

Cannot create `ClassExact_ManyProps` element because inexact props [1] is incompatible with exact `Props_ManyProps` [2].

   test.js:273:1
        v------------------------------------------------------------------
   273| <ClassExact_ManyProps // Error: Non-exact type may have extra keys.
   274|   {...(any: Props_ManyProps)}
   275| />;
        -^ [1]

References:
   test.js:209:52
   209| class ClassExact_ManyProps extends React.Component<$Exact<Props_ManyProps>> {}
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:278:1

Cannot create `ClassPure_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:278:1
   278| <ClassPure_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:277:55
   277| class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                              ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:296:1

Cannot create `ClassPure_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:296:1
        v---------------------------------------------------------------
   296| <ClassPure_ManyProps // Error: All props have an incorrect type.
   297|   string1={null}
   298|   string2={null}
   299|   boolean1={null}
   300|   boolean2={null}
   301|   number={null}
   302| />;
        -^

References:
   test.js:297:12
   297|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:298:12
   298|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:299:13
   299|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:300:13
   300|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:301:11
   301|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:315:1

Cannot create `ClassPure_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:315:1
        v-----------------------------------------------
   315| <ClassPure_ManyProps // Error: Missing `number`.
   316|   {...{string1: 'foo', string2: 'bar'}}
   317|   {...{boolean1: true, boolean2: false}}
   318| />;
        -^ [1]

References:
   test.js:277:55
   277| class ClassPure_ManyProps extends React.PureComponent<Props_ManyProps> {}
                                                              ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:326:1

Cannot create `ClassPure_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:326:1
        v---------------------------------------------------------------------------------------------------------------
   326| <ClassPure_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   327|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   328|   boolean1
   329|   boolean2={false}
   330|   number={42}
   331| />;
        -^

References:
   test.js:327:54
   327|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:336:54

null or undefined [1] is incompatible with number [2].

   test.js:336:54
   336|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:335:11
   335|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:340:1

Cannot create `Function_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:340:1
   340| <Function_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:339:36
   339| const Function_ManyProps = (props: Props_ManyProps) => any;
                                           ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:358:1

Cannot create `Function_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:358:1
        v--------------------------------------------------------------
   358| <Function_ManyProps // Error: All props have an incorrect type.
   359|   string1={null}
   360|   string2={null}
   361|   boolean1={null}
   362|   boolean2={null}
   363|   number={null}
   364| />;
        -^

References:
   test.js:359:12
   359|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:360:12
   360|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:361:13
   361|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:362:13
   362|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:363:11
   363|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:377:1

Cannot create `Function_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:377:1
        v----------------------------------------------
   377| <Function_ManyProps // Error: Missing `number`.
   378|   {...{string1: 'foo', string2: 'bar'}}
   379|   {...{boolean1: true, boolean2: false}}
   380| />;
        -^ [1]

References:
   test.js:339:36
   339| const Function_ManyProps = (props: Props_ManyProps) => any;
                                           ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:388:1

Cannot create `Function_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:388:1
        v--------------------------------------------------------------------------------------------------------------
   388| <Function_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   389|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   390|   boolean1
   391|   boolean2={false}
   392|   number={42}
   393| />;
        -^

References:
   test.js:389:54
   389|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:398:54

null or undefined [1] is incompatible with number [2].

   test.js:398:54
   398|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:397:11
   397|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:402:1

Cannot create `FunctionExact_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:402:1
   402| <FunctionExact_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:401:48
   401| const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                       ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:410:1

Cannot create `FunctionExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:410:1
        v-------------------------------------------------------
   410| <FunctionExact_ManyProps // OK: Other props are allowed.
   411|   string1="foo"
   412|   string2={'bar'}
   413|   boolean1
   414|   boolean2={false}
   415|   number={42}
   416|   a={1}
   417|   b={2}
   418|   c={3}
   419| />;
        -^ [2]

References:
   test.js:401:48
   401| const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                       ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:420:1

Cannot create `FunctionExact_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:420:1
        v-------------------------------------------------------------------
   420| <FunctionExact_ManyProps // Error: All props have an incorrect type.
   421|   string1={null}
   422|   string2={null}
   423|   boolean1={null}
   424|   boolean2={null}
   425|   number={null}
   426| />;
        -^

References:
   test.js:421:12
   421|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:422:12
   422|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:423:13
   423|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:424:13
   424|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:425:11
   425|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:439:1

Cannot create `FunctionExact_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:439:1
        v---------------------------------------------------
   439| <FunctionExact_ManyProps // Error: Missing `number`.
   440|   {...{string1: 'foo', string2: 'bar'}}
   441|   {...{boolean1: true, boolean2: false}}
   442| />;
        -^ [1]

References:
   test.js:401:48
   401| const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                       ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:443:1

Cannot create `FunctionExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:443:1
        v--------------------------------------------------------------
   443| <FunctionExact_ManyProps // Error: Extra props are not allowed.
   444|   string1="foo"
   445|   string2={'bar'}
   446|   boolean1
   447|   boolean2={false}
   448|   {...{number: 42, a: 1, b: 2, c: 3}}
   449| />;
        -^ [2]

References:
   test.js:401:48
   401| const FunctionExact_ManyProps = (props: $Exact<Props_ManyProps>) => any;
                                                       ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:450:1

Cannot create `FunctionExact_ManyProps` element because null or undefined [1] is incompatible with number [2] in
property `number`.

   test.js:450:1
        v-------------------------------------------------------------------------------------------------------------------
   450| <FunctionExact_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   451|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   452|   boolean1
   453|   boolean2={false}
   454|   number={42}
   455| />;
        -^

References:
   test.js:451:54
   451|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:460:54

null or undefined [1] is incompatible with number [2].

   test.js:460:54
   460|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:459:11
   459|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:464:1

Cannot create `Abstract_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:464:1
   464| <Abstract_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:463:47
   463| const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:482:1

Cannot create `Abstract_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:482:1
        v--------------------------------------------------------------
   482| <Abstract_ManyProps // Error: All props have an incorrect type.
   483|   string1={null}
   484|   string2={null}
   485|   boolean1={null}
   486|   boolean2={null}
   487|   number={null}
   488| />;
        -^

References:
   test.js:483:12
   483|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:484:12
   484|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:485:13
   485|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:486:13
   486|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:487:11
   487|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:501:1

Cannot create `Abstract_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:501:1
        v----------------------------------------------
   501| <Abstract_ManyProps // Error: Missing `number`.
   502|   {...{string1: 'foo', string2: 'bar'}}
   503|   {...{boolean1: true, boolean2: false}}
   504| />;
        -^ [1]

References:
   test.js:463:47
   463| const Abstract_ManyProps: React.ComponentType<Props_ManyProps> = any;
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:512:1

Cannot create `Abstract_ManyProps` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:512:1
        v--------------------------------------------------------------------------------------------------------------
   512| <Abstract_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   513|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   514|   boolean1
   515|   boolean2={false}
   516|   number={42}
   517| />;
        -^

References:
   test.js:513:54
   513|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:522:54

null or undefined [1] is incompatible with number [2].

   test.js:522:54
   522|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:521:11
   521|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:527:1

Cannot create `AbstractExact_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:527:1
   527| <AbstractExact_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:525:59
   525| const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                  ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:535:1

Cannot create `AbstractExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:535:1
        v--------------------------------------------------------------
   535| <AbstractExact_ManyProps // Error: Other props are not allowed.
   536|   string1="foo"
   537|   string2={'bar'}
   538|   boolean1
   539|   boolean2={false}
   540|   number={42}
   541|   a={1}
   542|   b={2}
   543|   c={3}
   544| />;
        -^ [2]

References:
   test.js:525:59
   525| const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                  ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:545:1

Cannot create `AbstractExact_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:545:1
        v-------------------------------------------------------------------
   545| <AbstractExact_ManyProps // Error: All props have an incorrect type.
   546|   string1={null}
   547|   string2={null}
   548|   boolean1={null}
   549|   boolean2={null}
   550|   number={null}
   551| />;
        -^

References:
   test.js:546:12
   546|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:547:12
   547|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:548:13
   548|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:549:13
   549|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:550:11
   550|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:564:1

Cannot create `AbstractExact_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:564:1
        v---------------------------------------------------
   564| <AbstractExact_ManyProps // Error: Missing `number`.
   565|   {...{string1: 'foo', string2: 'bar'}}
   566|   {...{boolean1: true, boolean2: false}}
   567| />;
        -^ [1]

References:
   test.js:525:59
   525| const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                  ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:568:1

Cannot create `AbstractExact_ManyProps` element because:
 - property `a` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `b` is missing in `Props_ManyProps` [1] but exists in props [2].
 - property `c` is missing in `Props_ManyProps` [1] but exists in props [2].

   test.js:568:1
        v--------------------------------------------------------------
   568| <AbstractExact_ManyProps // Error: Extra props are not allowed.
   569|   string1="foo"
   570|   string2={'bar'}
   571|   boolean1
   572|   boolean2={false}
   573|   {...{number: 42, a: 1, b: 2, c: 3}}
   574| />;
        -^ [2]

References:
   test.js:525:59
   525| const AbstractExact_ManyProps: React.ComponentType<$Exact<Props_ManyProps>>
                                                                  ^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- test.js:575:1

Cannot create `AbstractExact_ManyProps` element because null or undefined [1] is incompatible with number [2] in
property `number`.

   test.js:575:1
        v-------------------------------------------------------------------------------------------------------------------
   575| <AbstractExact_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   576|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   577|   boolean1
   578|   boolean2={false}
   579|   number={42}
   580| />;
        -^

References:
   test.js:576:54
   576|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:585:54

null or undefined [1] is incompatible with number [2].

   test.js:585:54
   585|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:584:11
   584|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:589:1

Cannot create `Member_ManyProps.prop` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:589:1
   589| <Member_ManyProps.prop />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:147:47
   147| class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:607:1

Cannot create `Member_ManyProps.prop` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:607:1
        v-----------------------------------------------------------------
   607| <Member_ManyProps.prop // Error: All props have an incorrect type.
   608|   string1={null}
   609|   string2={null}
   610|   boolean1={null}
   611|   boolean2={null}
   612|   number={null}
   613| />;
        -^

References:
   test.js:608:12
   608|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:609:12
   609|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:610:13
   610|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:611:13
   611|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:612:11
   612|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:626:1

Cannot create `Member_ManyProps.prop` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:626:1
        v-------------------------------------------------
   626| <Member_ManyProps.prop // Error: Missing `number`.
   627|   {...{string1: 'foo', string2: 'bar'}}
   628|   {...{boolean1: true, boolean2: false}}
   629| />;
        -^ [1]

References:
   test.js:147:47
   147| class Class_ManyProps extends React.Component<Props_ManyProps> {}
                                                      ^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:637:1

Cannot create `Member_ManyProps.prop` element because null or undefined [1] is incompatible with number [2] in property
`number`.

   test.js:637:1
        v-----------------------------------------------------------------------------------------------------------------
   637| <Member_ManyProps.prop // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   638|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   639|   boolean1
   640|   boolean2={false}
   641|   number={42}
   642| />;
        -^

References:
   test.js:638:54
   638|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:647:54

null or undefined [1] is incompatible with number [2].

   test.js:647:54
   647|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:646:11
   646|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:651:1

Cannot create `EnhancedClass_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:651:1
   651| <EnhancedClass_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:669:1

Cannot create `EnhancedClass_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:669:1
        v-------------------------------------------------------------------
   669| <EnhancedClass_ManyProps // Error: All props have an incorrect type.
   670|   string1={null}
   671|   string2={null}
   672|   boolean1={null}
   673|   boolean2={null}
   674|   number={null}
   675| />;
        -^

References:
   test.js:670:12
   670|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:671:12
   671|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:672:13
   672|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:673:13
   673|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:674:11
   674|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:688:1

Cannot create `EnhancedClass_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:688:1
        v---------------------------------------------------
   688| <EnhancedClass_ManyProps // Error: Missing `number`.
   689|   {...{string1: 'foo', string2: 'bar'}}
   690|   {...{boolean1: true, boolean2: false}}
   691| />;
        -^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:699:1

Cannot create `EnhancedClass_ManyProps` element because null or undefined [1] is incompatible with number [2] in
property `number`.

   test.js:699:1
        v-------------------------------------------------------------------------------------------------------------------
   699| <EnhancedClass_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   700|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   701|   boolean1
   702|   boolean2={false}
   703|   number={42}
   704| />;
        -^

References:
   test.js:700:54
   700|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:709:54

null or undefined [1] is incompatible with number [2].

   test.js:709:54
   709|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:708:11
   708|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:713:1

Cannot create `EnhancedFunction_ManyProps` element because:
 - property `boolean1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `boolean2` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `number` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string1` is missing in props [1] but exists in `Props_ManyProps` [2].
 - property `string2` is missing in props [1] but exists in `Props_ManyProps` [2].

   test.js:713:1
   713| <EnhancedFunction_ManyProps />; // Error: There are no props.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:731:1

Cannot create `EnhancedFunction_ManyProps` element because:
 - null [1] is incompatible with string [2] in property `string1`.
 - null [3] is incompatible with string [4] in property `string2`.
 - null [5] is incompatible with boolean [6] in property `boolean1`.
 - null [7] is incompatible with boolean [8] in property `boolean2`.
 - null [9] is incompatible with number [10] in property `number`.

   test.js:731:1
        v----------------------------------------------------------------------
   731| <EnhancedFunction_ManyProps // Error: All props have an incorrect type.
   732|   string1={null}
   733|   string2={null}
   734|   boolean1={null}
   735|   boolean2={null}
   736|   number={null}
   737| />;
        -^

References:
   test.js:732:12
   732|   string1={null}
                   ^^^^ [1]
   test.js:70:12
    70|   string1: string,
                   ^^^^^^ [2]
   test.js:733:12
   733|   string2={null}
                   ^^^^ [3]
   test.js:71:12
    71|   string2: string,
                   ^^^^^^ [4]
   test.js:734:13
   734|   boolean1={null}
                    ^^^^ [5]
   test.js:72:13
    72|   boolean1: boolean,
                    ^^^^^^^ [6]
   test.js:735:13
   735|   boolean2={null}
                    ^^^^ [7]
   test.js:73:13
    73|   boolean2: boolean,
                    ^^^^^^^ [8]
   test.js:736:11
   736|   number={null}
                  ^^^^ [9]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [10]


Error ---------------------------------------------------------------------------------------------------- test.js:750:1

Cannot create `EnhancedFunction_ManyProps` element because property `number` is missing in props [1] but exists in
`Props_ManyProps` [2].

   test.js:750:1
        v------------------------------------------------------
   750| <EnhancedFunction_ManyProps // Error: Missing `number`.
   751|   {...{string1: 'foo', string2: 'bar'}}
   752|   {...{boolean1: true, boolean2: false}}
   753| />;
        -^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:761:1

Cannot create `EnhancedFunction_ManyProps` element because null or undefined [1] is incompatible with number [2] in
property `number`.

   test.js:761:1
        v----------------------------------------------------------------------------------------------------------------------
   761| <EnhancedFunction_ManyProps // Error: `number` cannot be null, even though it is overwritten at the end of the element.
   762|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
   763|   boolean1
   764|   boolean2={false}
   765|   number={42}
   766| />;
        -^

References:
   test.js:762:54
   762|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]
   test.js:74:11
    74|   number: number,
                  ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:771:54

null or undefined [1] is incompatible with number [2].

   test.js:771:54
   771|   {...{string1: 'foo', string2: 'bar', number: (any: ?number)}}
                                                             ^^^^^^^ [1]

References:
   test.js:770:11
   770|   number={42}
                  ^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:786:1

Cannot create `Legacy_OptionalProps` element because property `foo` is missing in props [1] but exists in propTypes of
React component [2].

   test.js:786:1
   786| <Legacy_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:781:14
                     v
   781|   propTypes: {
   782|     foo: React.PropTypes.number.isRequired,
   783|     bar: React.PropTypes.number,
   784|   },
          ^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:788:1

Cannot create `Legacy_OptionalProps` element because undefined [1] is incompatible with number [2] in property `foo`.

   test.js:788:1
   788| <Legacy_OptionalProps foo={undefined} />; // Error: No ?number proptype.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/core.js:13:24
    13| declare var undefined: void;
                               ^^^^ [1]
   <BUILTINS>/react.js:313:36
   313|   number: React$PropType$Primitive<number>;
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:793:1

Cannot create `Legacy_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:793:1
        v----------------------------------------------------
   793| <Legacy_OptionalProps // Error: `foo` has a bad type.
   794|   foo="nope"
   795|   bar={2}
   796| />;
        -^

References:
   test.js:794:7
   794|   foo="nope"
              ^^^^^^ [1]
   <BUILTINS>/react.js:313:36
   313|   number: React$PropType$Primitive<number>;
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:797:1

Cannot create `Legacy_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:797:1
        v----------------------------------------------------
   797| <Legacy_OptionalProps // Error: `bar` has a bad type.
   798|   foo={4}
   799|   bar="nope"
   800| />;
        -^

References:
   test.js:799:7
   799|   bar="nope"
              ^^^^^^ [1]
   <BUILTINS>/react.js:313:36
   313|   number: React$PropType$Primitive<number>;
                                           ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:803:1

Cannot create `Class_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:803:1
   803| <Class_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:802:51
   802| class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:810:1

Cannot create `Class_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:810:1
        v---------------------------------------------------
   810| <Class_OptionalProps // Error: `foo` has a bad type.
   811|   foo="nope"
   812|   bar={2}
   813| />;
        -^

References:
   test.js:811:7
   811|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:814:1

Cannot create `Class_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:814:1
        v---------------------------------------------------
   814| <Class_OptionalProps // Error: `bar` has a bad type.
   815|   foo={4}
   816|   bar="nope"
   817| />;
        -^

References:
   test.js:816:7
   816|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:821:1

Cannot create `ClassExact_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:821:1
   821| <ClassExact_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:820:34
   820|   extends React.Component<$Exact<Props_OptionalProps>> {}
                                         ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:828:1

Cannot create `ClassExact_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:828:1
        v--------------------------------------------------------
   828| <ClassExact_OptionalProps // Error: `foo` has a bad type.
   829|   foo="nope"
   830|   bar={2}
   831| />;
        -^

References:
   test.js:829:7
   829|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:832:1

Cannot create `ClassExact_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:832:1
        v--------------------------------------------------------
   832| <ClassExact_OptionalProps // Error: `bar` has a bad type.
   833|   foo={4}
   834|   bar="nope"
   835| />;
        -^

References:
   test.js:834:7
   834|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:839:1

Cannot create `ClassPure_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:839:1
   839| <ClassPure_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:838:31
   838|   extends React.PureComponent<Props_OptionalProps> {}
                                      ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:846:1

Cannot create `ClassPure_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:846:1
        v-------------------------------------------------------
   846| <ClassPure_OptionalProps // Error: `foo` has a bad type.
   847|   foo="nope"
   848|   bar={2}
   849| />;
        -^

References:
   test.js:847:7
   847|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:850:1

Cannot create `ClassPure_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:850:1
        v-------------------------------------------------------
   850| <ClassPure_OptionalProps // Error: `bar` has a bad type.
   851|   foo={4}
   852|   bar="nope"
   853| />;
        -^

References:
   test.js:852:7
   852|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:856:1

Cannot create `Function_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:856:1
   856| <Function_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:855:40
   855| const Function_OptionalProps = (props: Props_OptionalProps) => any;
                                               ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:863:1

Cannot create `Function_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:863:1
        v------------------------------------------------------
   863| <Function_OptionalProps // Error: `foo` has a bad type.
   864|   foo="nope"
   865|   bar={2}
   866| />;
        -^

References:
   test.js:864:7
   864|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:867:1

Cannot create `Function_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:867:1
        v------------------------------------------------------
   867| <Function_OptionalProps // Error: `bar` has a bad type.
   868|   foo={4}
   869|   bar="nope"
   870| />;
        -^

References:
   test.js:869:7
   869|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:873:1

Cannot create `FunctionExact_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:873:1
   873| <FunctionExact_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:872:52
   872| const FunctionExact_OptionalProps = (props: $Exact<Props_OptionalProps>) => any;
                                                           ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:880:1

Cannot create `FunctionExact_OptionalProps` element because string [1] is incompatible with number [2] in property
`foo`.

   test.js:880:1
        v-----------------------------------------------------------
   880| <FunctionExact_OptionalProps // Error: `foo` has a bad type.
   881|   foo="nope"
   882|   bar={2}
   883| />;
        -^

References:
   test.js:881:7
   881|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:884:1

Cannot create `FunctionExact_OptionalProps` element because string [1] is incompatible with number [2] in property
`bar`.

   test.js:884:1
        v-----------------------------------------------------------
   884| <FunctionExact_OptionalProps // Error: `bar` has a bad type.
   885|   foo={4}
   886|   bar="nope"
   887| />;
        -^

References:
   test.js:886:7
   886|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:890:1

Cannot create `Abstract_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:890:1
   890| <Abstract_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:889:51
   889| const Abstract_OptionalProps: React.ComponentType<Props_OptionalProps> = any;
                                                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:897:1

Cannot create `Abstract_OptionalProps` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:897:1
        v------------------------------------------------------
   897| <Abstract_OptionalProps // Error: `foo` has a bad type.
   898|   foo="nope"
   899|   bar={2}
   900| />;
        -^

References:
   test.js:898:7
   898|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:901:1

Cannot create `Abstract_OptionalProps` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:901:1
        v------------------------------------------------------
   901| <Abstract_OptionalProps // Error: `bar` has a bad type.
   902|   foo={4}
   903|   bar="nope"
   904| />;
        -^

References:
   test.js:903:7
   903|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:908:1

Cannot create `AbstractExact_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:908:1
   908| <AbstractExact_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:907:30
   907|   React.ComponentType<$Exact<Props_OptionalProps>> = any;
                                     ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:915:1

Cannot create `AbstractExact_OptionalProps` element because string [1] is incompatible with number [2] in property
`foo`.

   test.js:915:1
        v-----------------------------------------------------------
   915| <AbstractExact_OptionalProps // Error: `foo` has a bad type.
   916|   foo="nope"
   917|   bar={2}
   918| />;
        -^

References:
   test.js:916:7
   916|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:919:1

Cannot create `AbstractExact_OptionalProps` element because string [1] is incompatible with number [2] in property
`bar`.

   test.js:919:1
        v-----------------------------------------------------------
   919| <AbstractExact_OptionalProps // Error: `bar` has a bad type.
   920|   foo={4}
   921|   bar="nope"
   922| />;
        -^

References:
   test.js:921:7
   921|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:925:1

Cannot create `Member_OptionalProps.prop` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:925:1
   925| <Member_OptionalProps.prop />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:802:51
   802| class Class_OptionalProps extends React.Component<Props_OptionalProps> {}
                                                          ^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:932:1

Cannot create `Member_OptionalProps.prop` element because string [1] is incompatible with number [2] in property `foo`.

   test.js:932:1
        v---------------------------------------------------------
   932| <Member_OptionalProps.prop // Error: `foo` has a bad type.
   933|   foo="nope"
   934|   bar={2}
   935| />;
        -^

References:
   test.js:933:7
   933|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:936:1

Cannot create `Member_OptionalProps.prop` element because string [1] is incompatible with number [2] in property `bar`.

   test.js:936:1
        v---------------------------------------------------------
   936| <Member_OptionalProps.prop // Error: `bar` has a bad type.
   937|   foo={4}
   938|   bar="nope"
   939| />;
        -^

References:
   test.js:938:7
   938|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:942:1

Cannot create `EnhancedClass_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:942:1
   942| <EnhancedClass_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:949:1

Cannot create `EnhancedClass_OptionalProps` element because string [1] is incompatible with number [2] in property
`foo`.

   test.js:949:1
        v-----------------------------------------------------------
   949| <EnhancedClass_OptionalProps // Error: `foo` has a bad type.
   950|   foo="nope"
   951|   bar={2}
   952| />;
        -^

References:
   test.js:950:7
   950|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:953:1

Cannot create `EnhancedClass_OptionalProps` element because string [1] is incompatible with number [2] in property
`bar`.

   test.js:953:1
        v-----------------------------------------------------------
   953| <EnhancedClass_OptionalProps // Error: `bar` has a bad type.
   954|   foo={4}
   955|   bar="nope"
   956| />;
        -^

References:
   test.js:955:7
   955|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:959:1

Cannot create `EnhancedFunction_OptionalProps` element because property `foo` is missing in props [1] but exists in
`Props_OptionalProps` [2].

   test.js:959:1
   959| <EnhancedFunction_OptionalProps />; // Error: `foo` is required.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   test.js:11:24
    11| ): React.ComponentType<React.ElementConfig<Component>> {
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:966:1

Cannot create `EnhancedFunction_OptionalProps` element because string [1] is incompatible with number [2] in property
`foo`.

   test.js:966:1
        v--------------------------------------------------------------
   966| <EnhancedFunction_OptionalProps // Error: `foo` has a bad type.
   967|   foo="nope"
   968|   bar={2}
   969| />;
        -^

References:
   test.js:967:7
   967|   foo="nope"
              ^^^^^^ [1]
   test.js:778:35
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                          ^^^^^^ [2]


Error ---------------------------------------------------------------------------------------------------- test.js:970:1

Cannot create `EnhancedFunction_OptionalProps` element because string [1] is incompatible with number [2] in property
`bar`.

   test.js:970:1
        v--------------------------------------------------------------
   970| <EnhancedFunction_OptionalProps // Error: `bar` has a bad type.
   971|   foo={4}
   972|   bar="nope"
   973| />;
        -^

References:
   test.js:972:7
   972|   bar="nope"
              ^^^^^^ [1]
   test.js:778:49
   778| type Props_OptionalProps = {foo: ?number, bar?: number};
                                                        ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1000:1

Cannot create `Legacy_DefaultProps` element because property `bar` is missing in props [1] but exists in propTypes of
React component [2].

   test.js:1000:1
         v------------------------------------------------------------------------
   1000| <Legacy_DefaultProps // Error: It is missing a required non-default prop.
   1001|   foo={1}
   1002| />;
         -^ [1]

References:
   test.js:985:14
                      v
    985|   propTypes: {
    986|     foo: React.PropTypes.number.isRequired,
    987|     bar: React.PropTypes.number.isRequired,
    988|   },
           ^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1016:1

Cannot create `Class_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1016:1
         v-----------------------------------------------------------------------
   1016| <Class_DefaultProps // Error: It is missing a required non-default prop.
   1017|   foo={1}
   1018| />;
         -^ [1]

References:
   test.js:1004:50
   1004| class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                          ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1033:1

Cannot create `ClassExact_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1033:1
         v----------------------------------------------------------------------------
   1033| <ClassExact_DefaultProps // Error: It is missing a required non-default prop.
   1034|   foo={1}
   1035| />;
         -^ [1]

References:
   test.js:1021:34
   1021|   extends React.Component<$Exact<Props_DefaultProps>> {
                                          ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1049:1

Cannot create `ClassPure_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1049:1
         v---------------------------------------------------------------------------
   1049| <ClassPure_DefaultProps // Error: It is missing a required non-default prop.
   1050|   foo={1}
   1051| />;
         -^ [1]

References:
   test.js:1037:58
   1037| class ClassPure_DefaultProps extends React.PureComponent<Props_DefaultProps> {
                                                                  ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1066:1

Cannot create `Function_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1066:1
         v--------------------------------------------------------------------------
   1066| <Function_DefaultProps // Error: It is missing a required non-default prop.
   1067|   foo={1}
   1068| />;
         -^ [1]

References:
   test.js:1053:39
   1053| function Function_DefaultProps(props: Props_DefaultProps) {
                                               ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1083:1

Cannot create `FunctionExact_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1083:1
         v-------------------------------------------------------------------------------
   1083| <FunctionExact_DefaultProps // Error: It is missing a required non-default prop.
   1084|   foo={1}
   1085| />;
         -^ [1]

References:
   test.js:1070:51
   1070| function FunctionExact_DefaultProps(props: $Exact<Props_DefaultProps>) {
                                                           ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1095:1

Cannot create `Member_DefaultProps.prop` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1095:1
         v-----------------------------------------------------------------------------
   1095| <Member_DefaultProps.prop // Error: It is missing a required non-default prop.
   1096|   foo={1}
   1097| />;
         -^ [1]

References:
   test.js:1004:50
   1004| class Class_DefaultProps extends React.Component<Props_DefaultProps> {
                                                          ^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1107:1

Cannot create `EnhancedClass_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1107:1
         v-------------------------------------------------------------------------------
   1107| <EnhancedClass_DefaultProps // Error: It is missing a required non-default prop.
   1108|   foo={1}
   1109| />;
         -^ [1]

References:
   test.js:11:24
     11| ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------------- test.js:1119:1

Cannot create `EnhancedFunction_DefaultProps` element because property `bar` is missing in props [1] but exists in
`Props_DefaultProps` [2].

   test.js:1119:1
         v----------------------------------------------------------------------------------
   1119| <EnhancedFunction_DefaultProps // Error: It is missing a required non-default prop.
   1120|   foo={1}
   1121| />;
         -^ [1]

References:
   test.js:11:24
     11| ): React.ComponentType<React.ElementConfig<Component>> {
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]



Found 208 errors
